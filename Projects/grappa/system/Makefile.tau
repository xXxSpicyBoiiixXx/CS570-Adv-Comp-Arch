########################################################################
## Copyright (c) 2010-2015, University of Washington and Battelle
## Memorial Institute.  All rights reserved.
##
## Redistribution and use in source and binary forms, with or without
## modification, are permitted provided that the following conditions
## are met:
##     * Redistributions of source code must retain the above
##       copyright notice, this list of conditions and the following
##       disclaimer.
##     * Redistributions in binary form must reproduce the above
##       copyright notice, this list of conditions and the following
##       disclaimer in the documentation and/or other materials
##       provided with the distribution.
##     * Neither the name of the University of Washington, Battelle
##       Memorial Institute, or the names of their contributors may be
##       used to endorse or promote products derived from this
##       software without specific prior written permission.
##
## THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
## "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
## LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS
## FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE
## UNIVERSITY OF WASHINGTON OR BATTELLE MEMORIAL INSTITUTE BE LIABLE
## FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
## CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT
## OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR
## BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF
## LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
## (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE
## USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH
## DAMAGE.
########################################################################

# This makefile has various operations to transform the files
# from a Tau trace for viewing
# Example usage:
# env var TRACEDIR should be set to the location of trace files
# > make -f Makefile.tau otf
# > vampir $TRACEDIR/app.otf

TAUDIR=/sampa/share/tau-perf/tau

TAU_BIN=$(TAUDIR)/x86_64/bin

UTILS=$(GRAPPA_HOME)/system/utils

#
# Main targets
#

# generate otf file
otf: $(TRACEDIR)/app.otf

# generate file that contains mappings of "MPI message tag" to Grappa active message
# TODO: get Vampir/other trace viewer to display AM string instead of MPI tag
fm: $(TRACEDIR)/fn_mappings

# merge all output files of the trace into a single trace file and event definition file
merge: $(TRACEDIR)/tau.trc $(TRACEDIR)/tau.edf

##

TRACE_BACKUP_DIR=$(TRACEDIR)/../profiles_backup
backup:
	mkdir -p $(TRACE_BACKUP_DIR)
	mv $(TRACEDIR) $(shell echo $(TRACE_BACKUP_DIR)/$(TARGET)-$(shell git rev-parse --short HEAD))-$(shell date | awk '{gsub(/ +/, "_");print}')
	mkdir -p $(TRACEDIR)

# fix GRAPPA tau profiling group names
fixg:
	cd $(TRACEDIR); cat ../ProfilerConfig.hpp | cut -d ' ' -f2,3 | $(UTILS)/rename_groups.sh

# merge trace files; also creates tau.edf
$(TRACEDIR)/tau.trc: $(TRACEDIR)/tautrace.*
	cd $(TRACEDIR);	$(TAU_BIN)/tau_treemerge.pl

$(TRACEDIR)/tau.edf: $(TRACEDIR)/tau.trc
	# tau.edf created by merge

TAU2OTF_PARALLEL_STREAMS=8

# convert trace to OTF (Open Trace Format)
$(TRACEDIR)/app.otf: $(TRACEDIR)/tau.trc $(TRACEDIR)/tau.edf
	$(TAU_BIN)/tau2otf $^ $@ -z -n $(TAU2OTF_PARALLEL_STREAMS)

# generate tau_reader human-readable trace output
$(TRACEDIR)/reader.out: $(TRACEDIR)/tau.trc $(TRACEDIR)/tau.edf
	$(TAU_BIN)/tau_reader $^ > $@

.PRECIOUS: $(TRACEDIR)/tau.trc $(TRACEDIR)/tau.edf

$(TARGET).d: $(TARGET)
	objdump -d $< > $@

# generate mapping from trace message tags to function names
$(TRACEDIR)/fn_mappings: $(TRACEDIR)/reader.out $(TARGET).d
	grep Message $< | cut -d , -f5 | cut -d ' ' -f3 | sort | uniq | $(UTILS)/obj_grep.rb $(TARGET).d > $@

# remove pre-merged trace files
clean_orig: $(TRACEDIR)/tau.trc $(TRACEDIR)/tau.edf
	rm -f $(TRACEDIR)/tautrace.*.*.*.trc
	rm -f $(TRACEDIR)/events.*.edf

